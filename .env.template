# ========================================
# Bubble RAG 全栈部署配置模板
# ========================================
# 复制此文件为 .env 并根据需要修改配置
# 自动生成时间: $(date)

# ========================================
# 基础配置
# ========================================
COMPOSE_PROJECT_NAME=bubble_rag
ENVIRONMENT=production
TZ=Asia/Shanghai

# 部署配置
RESTART_POLICY=unless-stopped
VOLUME_DRIVER=local
NETWORK_DRIVER=bridge

# 日志配置
LOG_MAX_SIZE=100m
LOG_MAX_FILES=5

# ========================================
# 端口配置
# ========================================
# RAG服务端口
RAG_PORT=8000
RAG_SFT_PORT=8001

# MySQL数据库端口
MYSQL_PORT=3306

# Redis缓存端口
REDIS_PORT=6379

# Milvus向量数据库端口
MILVUS_PORT=19530
MILVUS_HTTP_PORT=9091

# Node.js应用端口
NODEJS_PORT=13000
NODEJS_DEV_PORT=3001
NODEJS_DEBUG_PORT=9229
NODEJS_REDIS_PORT=6380


# 管理界面端口
MINIO_API_PORT=9000
MINIO_CONSOLE_PORT=9001

# ========================================
# 镜像配置
# ========================================
# RAG应用镜像
RAG_IMAGE_NAME=laiye-aifoundry-registry.cn-beijing.cr.aliyuncs.com/public/bubble-rag-backend
RAG_IMAGE_TAG=latest
RAG_SFT_IMAGE_NAME=laiye-aifoundry-registry.cn-beijing.cr.aliyuncs.com/public/bubble-rag-sft-backend
RAG_SFT_IMAGE_TAG=latest

# Node.js应用镜像
NODEJS_IMAGE_NAME=laiye-aifoundry-registry.cn-beijing.cr.aliyuncs.com/public/bubble-rag-frontend
NODEJS_IMAGE_TAG=latest

# 基础服务镜像
MYSQL_IMAGE=laiye-aifoundry-registry.cn-beijing.cr.aliyuncs.com/public/mysql
MYSQL_VERSION=8.0.41
REDIS_IMAGE=laiye-aifoundry-registry.cn-beijing.cr.aliyuncs.com/public/redis
REDIS_VERSION=7-alpine
MILVUS_IMAGE=laiye-aifoundry-registry.cn-beijing.cr.aliyuncs.com/public/milvus
MILVUS_VERSION=v2.5.6
ETCD_IMAGE=laiye-aifoundry-registry.cn-beijing.cr.aliyuncs.com/public/etcd
ETCD_VERSION=v3.5.18
MINIO_IMAGE=laiye-aifoundry-registry.cn-beijing.cr.aliyuncs.com/public/minio
MINIO_VERSION=RELEASE.2024-05-28T17-19-04Z
VLLM_IMAGE=laiye-aifoundry-registry.cn-beijing.cr.aliyuncs.com/public/vllm-openai
VLLM_IMAGE_TAG=v0.10.1.1

# Node.js专用服务镜像
NODEJS_REDIS_IMAGE=laiye-aifoundry-registry.cn-beijing.cr.aliyuncs.com/public/redis
NODEJS_REDIS_VERSION=7-alpine

# ========================================
# 容器名称配置
# ========================================
RAG_CONTAINER_NAME=bubble_rag_server
RAG_SFT_CONTAINER_NAME=bubble_rag_sft_server
MYSQL_CONTAINER_NAME=laiye_mysql
REDIS_CONTAINER_NAME=laiye_redis
MILVUS_CONTAINER_NAME=milvus-standalone
ETCD_CONTAINER_NAME=milvus-etcd
MINIO_CONTAINER_NAME=milvus-minio
NODEJS_CONTAINER_NAME=bubble_rag_nodejs_app

# ========================================
# 数据库配置
# ========================================
# MySQL配置
MYSQL_HOST=mysql
MYSQL_ROOT_PASSWORD=laiye123456
MYSQL_DATABASE=bubble_rag
MYSQL_USER=laiye
MYSQL_PASSWORD=laiye123456
MYSQL_URL="mysql+pymysql://laiye:laiye123456@mysql:3306/bubble_rag"

# MySQL性能配置
MYSQL_CHARSET=utf8mb4
MYSQL_COLLATION=utf8mb4_unicode_ci
MYSQL_MAX_CONNECTIONS=1000
MYSQL_INNODB_BUFFER_POOL=1G
MYSQL_INNODB_LOG_SIZE=256M
MYSQL_MAX_PACKET=64M
MYSQL_SLOW_QUERY_LOG=1
MYSQL_LONG_QUERY_TIME=2
MYSQL_LOG_SLOW_QUERIES=1
MYSQL_INNODB_FLUSH=2
MYSQL_SYNC_BINLOG=0

# Liquibase数据库版本控制配置
LIQUIBASE_IMAGE=laiye-aifoundry-registry.cn-beijing.cr.aliyuncs.com/public/bubble-rag-liquibase
LIQUIBASE_VERSION=4.21.0
LIQUIBASE_CONTAINER_NAME=bubble_rag_liquibase
LIQUIBASE_COMMAND=update
LIQUIBASE_URL="jdbc:mysql://mysql:3306/bubble_rag?useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=Asia/Shanghai"
LIQUIBASE_USERNAME=laiye
LIQUIBASE_PASSWORD=laiye123456
LIQUIBASE_DRIVER=com.mysql.cj.jdbc.Driver
LIQUIBASE_CHANGELOG_FILE=bubble_rag.changelog.xml
LIQUIBASE_CHANGELOG_PATH=./database/liquibase
LIQUIBASE_LOG_LEVEL=INFO
LIQUIBASE_LOGS_PATH=./logs/liquibase

# Redis配置
REDIS_HOST=redis
REDIS_INTERNAL_PORT=6379
REDIS_PASSWORD=
REDIS_DB=0

# Redis性能配置
REDIS_AOF=yes
REDIS_MAX_MEMORY=1gb
REDIS_MAX_MEMORY_POLICY=allkeys-lru
REDIS_TIMEOUT=0
REDIS_TCP_KEEPALIVE=300
REDIS_DATABASES=16

# Node.js Redis配置
NODEJS_REDIS_URL=redis://redis:6379
NODEJS_REDIS_PASSWORD=
NODEJS_REDIS_AOF=yes
NODEJS_REDIS_MAX_MEMORY=512mb
NODEJS_REDIS_MAX_MEMORY_POLICY=allkeys-lru

# Milvus配置
MILVUS_HOST=milvus
MILVUS_USER=
MILVUS_PASSWORD=
MILVUS_DB_NAME=default

# MinIO配置
MINIO_ACCESS_KEY=minioadmin
MINIO_SECRET_KEY=minioadmin
MINIO_REGION=us-east-1
MINIO_BROWSER=on
MINIO_CONSOLE_ADDRESS=:9001
MINIO_ADDRESS=minio:9000

# Etcd配置
ETCD_ENDPOINTS=etcd:2379
ETCD_AUTO_COMPACTION_MODE=revision
ETCD_AUTO_COMPACTION_RETENTION=1000
ETCD_QUOTA_BACKEND_BYTES=4294967296
ETCD_SNAPSHOT_COUNT=50000
ETCD_MAX_REQUEST_BYTES=33554432
ETCD_MAX_TXN_OPS=128

# ========================================
# RAG应用配置
# ========================================
# 服务器配置
RAG_SERVER_HOST=0.0.0.0
RAG_SERVER_PORT=8000
RAG_SFT_SERVER_PORT=8001
RAG_SERVER_WORKERS=4
RAG_BASE_URI=/bubble_rag
RAG_CORS_ORIGINS=*
RAG_API_KEY=bubble-rag-api-key

# RAG服务基础路径配置
SRV_BASE_URI=/bubble_rag

# 文件上传路径配置
UPLOAD_SAVE_PATH=/app/uploads

# MinerU服务器配置
MINERU_SERVER_URL=http://localhost:28100

# 视觉语言模型(VLM)配置
VLM_BASE_URL=http://localhost:30010/v1/
VLM_API_KEY=your_vlm_api_key
VLM_MODEL_NAME=qwen2.5-vl-instruct

# 大语言模型(LLM)配置
LLM_BASE_URL=http://localhost:30205/v1/
LLM_API_KEY=your_llm_api_key
LLM_MODEL_NAME=Qwen3-235B-A22B

# 当前服务器IP配置
CURR_SERVER_IP=localhost

# 日志配置
RAG_LOG_LEVEL=INFO
RAG_LOG_FORMAT=json

# 性能配置
RAG_WORKERS=4
RAG_WORKER_CLASS=uvicorn.workers.UvicornWorker
RAG_WORKER_CONNECTIONS=1000
RAG_MAX_REQUESTS=1000
RAG_MAX_REQUESTS_JITTER=100
RAG_TIMEOUT=120
RAG_KEEPALIVE=2

# 资源限制
RAG_MEMORY_LIMIT=4G
RAG_CPU_LIMIT=2.0
RAG_MEMORY_RESERVE=2G
RAG_CPU_RESERVE=1.0

# 健康检查配置
RAG_HEALTH_PATH=/health
RAG_HEALTH_INTERVAL=30s
RAG_HEALTH_TIMEOUT=10s
RAG_HEALTH_RETRIES=5
RAG_HEALTH_START_PERIOD=60s

# 模型配置
EMBEDDING_MODEL_PATH=/app/models/embedding
RERANKER_MODEL_PATH=/app/models/reranker

# ========================================
# Node.js应用配置
# ========================================
# 环境配置
NODE_ENV=production
NODEJS_SERVER_HOST=0.0.0.0
NODEJS_SERVER_PORT=3000

# API配置
API_BASE_URL=http://bubble-rag-server:8000/bubble_rag
TRAINING_API_BASE_URL=http://bubble-rag-sft-server:8001
NODEJS_CORS_ORIGINS=*

# 模型训练配置
# 训练文件路径
TRAINING_FILES_PATH=./files
# 训练模型路径
TRAINING_MODELS_PATH=./models
# 训练输出路径
TRAINING_OUTPUT_PATH=./output
# modelscope缓存位置
TRAINING_CACHE=/app/cache

# 日志配置
NODEJS_LOG_LEVEL=info
NODEJS_LOG_FORMAT=combined

# 性能配置
NODEJS_UV_THREADPOOL_SIZE=16
NODEJS_MAX_OLD_SPACE_SIZE=2048

# 安全配置
NODEJS_HELMET_ENABLED=true
NODEJS_TRUST_PROXY=true
NODEJS_SESSION_SECRET=nodejs-session-secret

# 资源限制
NODEJS_MEMORY_LIMIT=1G
NODEJS_CPU_LIMIT=1.0
NODEJS_MEMORY_RESERVE=256M
NODEJS_CPU_RESERVE=0.25

# 健康检查配置
NODEJS_HEALTH_PATH=/health
NODEJS_HEALTH_INTERVAL=5s
NODEJS_HEALTH_TIMEOUT=5s
NODEJS_HEALTH_RETRIES=30
NODEJS_HEALTH_START_PERIOD=30s


# ========================================
# 健康检查配置
# ========================================
# MySQL健康检查
MYSQL_HEALTH_INTERVAL=30s
MYSQL_HEALTH_TIMEOUT=10s
MYSQL_HEALTH_RETRIES=5
MYSQL_HEALTH_START_PERIOD=30s

# Redis健康检查
REDIS_HEALTH_INTERVAL=30s
REDIS_HEALTH_TIMEOUT=10s
REDIS_HEALTH_RETRIES=3

# Node.js Redis健康检查
NODEJS_REDIS_HEALTH_INTERVAL=30s
NODEJS_REDIS_HEALTH_TIMEOUT=10s
NODEJS_REDIS_HEALTH_RETRIES=3

# Milvus健康检查
MILVUS_HEALTH_INTERVAL=30s
MILVUS_HEALTH_TIMEOUT=20s
MILVUS_HEALTH_RETRIES=5
MILVUS_HEALTH_START_PERIOD=120s

# Etcd健康检查
ETCD_HEALTH_INTERVAL=30s
ETCD_HEALTH_TIMEOUT=20s
ETCD_HEALTH_RETRIES=3
ETCD_HEALTH_START_PERIOD=10s

# MinIO健康检查
MINIO_HEALTH_INTERVAL=30s
MINIO_HEALTH_TIMEOUT=20s
MINIO_HEALTH_RETRIES=3
MINIO_HEALTH_START_PERIOD=10s


# ========================================
# 路径配置
# ========================================
# 数据目录
DATA_PATH=./data
LOGS_PATH=./logs
CONFIG_PATH=./config
MODELS_PATH=./models
STATIC_FILES_PATH=./public
TEMP_PATH=./temp

# 上传目录
UPLOADS_PATH=./uploads
RAG_UPLOADS_PATH=./data/uploads
NODEJS_UPLOADS_PATH=./data/nodejs/uploads

# Node.js路径配置
NODEJS_LOGS_PATH=./logs/nodejs
NODEJS_CONFIG_PATH=./config/nodejs
NODEJS_SOURCE_PATH=./src
NODEJS_PUBLIC_PATH=./public

# MySQL路径配置
MYSQL_CONF_PATH=../mysql/conf
MYSQL_LOGS_PATH=./logs/mysql
MYSQL_DATA_PATH=./data/mysql

# Redis路径配置
REDIS_CONFIG_PATH=../redis/redis.conf
REDIS_DATA_PATH=./data/redis
NODEJS_REDIS_CONFIG=./docker/nodejs/redis
NODEJS_REDIS_DATA_PATH=./data/nodejs/redis

# Milvus路径配置
MILVUS_CONFIG_PATH=../milvus/milvus.yaml
MILVUS_DATA_PATH=./data/milvus

# 其他服务路径配置
ETCD_DATA_PATH=./data/etcd
MINIO_DATA_PATH=./data/minio


# SSL证书路径
SSL_CERTS_PATH=../ssl

# ========================================
# 卷名称配置
# ========================================
MYSQL_DATA_VOLUME=bubble_rag_mysql_data
MILVUS_DATA_VOLUME=bubble_rag_milvus_data
ETCD_DATA_VOLUME=bubble_rag_etcd_data
MINIO_DATA_VOLUME=bubble_rag_minio_data
REDIS_DATA_VOLUME=bubble_rag_redis_data
RAG_UPLOADS_VOLUME=bubble_rag_uploads
NODEJS_UPLOADS_VOLUME=nodejs_uploads
NODEJS_REDIS_DATA_VOLUME=nodejs_redis_data

# ========================================
# 网络配置
# ========================================
RAG_NETWORK_NAME=bubble_rag_network
RAG_NETWORK_SUBNET=172.20.0.0/16
RAG_NETWORK_GATEWAY=172.20.0.1
RAG_NETWORK_BRIDGE_NAME=br-rag

NODEJS_NETWORK_NAME=nodejs_network
NODEJS_NETWORK_SUBNET=172.21.0.0/16
NODEJS_NETWORK_GATEWAY=172.21.0.1
NODEJS_NETWORK_BRIDGE_NAME=br-nodejs

# ========================================
# 高级配置
# ========================================
# 卷配置
VOLUME_TYPE=none
VOLUME_OPTIONS=bind

# 构建配置
DOCKER_BUILDKIT=1
COMPOSE_DOCKER_CLI_BUILD=1

# 开发配置 (仅开发环境)
NODEJS_STATIC_PORT=8080
POSTGRES_DB=nodejs_app
POSTGRES_USER=nodejs_user
POSTGRES_PASSWORD=nodejs_password
POSTGRES_PORT=5432
POSTGRES_INIT_SCRIPTS=./docker/postgres/init

MONGO_ROOT_USERNAME=admin
MONGO_ROOT_PASSWORD=admin123
MONGO_DB=nodejs_app
MONGO_PORT=27017
MONGO_INIT_SCRIPTS=./docker/mongodb/init

# ========================================
# 环境特定配置
# ========================================
# 生产环境特定配置
# (当ENVIRONMENT=production时生效)

# 开发环境特定配置  
# (当ENVIRONMENT=development时生效)

# ========================================
# 安全配置
# ========================================
# JWT密钥 (请在生产环境中更改)
JWT_SECRET=bubble-rag-jwt-secret-$(openssl rand -hex 32)

# 跨域配置
CORS_ORIGIN=*

# API密钥 (请在生产环境中更改)
API_KEY=bubble-rag-api-key-$(date +%s)

# ========================================
# 备份和恢复配置
# ========================================
BACKUP_PATH=./backups
BACKUP_RETENTION_DAYS=30
BACKUP_SCHEDULE="0 2 * * *"

# ========================================
# 监控和日志配置
# ========================================
ENABLE_METRICS=true
METRICS_PORT=9090
PROMETHEUS_CONFIG=./config/prometheus.yml
GRAFANA_PORT=3001

# 日志级别
LOG_LEVEL=info
LOG_FORMAT=json

# ========================================
# 自定义配置
# ========================================
# 在此处添加您的自定义环境变量